{"version":3,"sources":["Components/AddCategory.js","Helpers/GetGifs.js","Components/GifGridItem.js","Components/GifGrid.js","Hooks/useFetcGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catgs","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","imagen","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","cargando","estado","setEstado","useEffect","then","setTimeout","useFetcGifs","GifExpertApp","categorias","divRoot","document","querySelector","ReactDOM","render"],"mappings":"+KAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYC,OACI,sBAAMC,SAXU,SAAAC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAK,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAMlB,SACI,uBACIO,KAAM,OACNC,MAAST,EACTU,SAhBa,SAAAP,GAAKF,EAAcE,EAAEQ,OAAOF,a,uBCL5CG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,8DAIKI,MAAMF,GAJX,cAIbG,EAJa,gBAKEA,EAAUC,OALZ,uBAKZC,EALY,EAKZA,KAGDC,EAAOD,EAAKE,KAAK,SAAAC,GAAU,IAAD,EAC5B,MAAM,CACFC,GAAID,EAAOC,GACXC,MAAOF,EAAOE,MACdV,IAAG,UAAEQ,EAAOG,cAAT,aAAE,EAAeC,iBAAiBZ,QAZ1B,kBAgBZM,GAhBY,4CAAH,sDCCPO,EAAc,SAAC,GAAc,IAAbL,EAAY,EAAZA,OAEzB,OACI,sBAAKM,UAAU,OAAf,UACI,qBAAKC,IAAKP,EAAOR,IAAKgB,IAAOR,EAAOE,QACnC,4BAAIF,EAAOE,YCFXO,EAAU,SAAC,GAAiB,IAAhBnB,EAAe,EAAfA,UAErB,ECHwB,SAACA,GAEzB,MAA4Bd,mBAAS,CAACqB,KAAK,GAAGa,UAAS,IAAvD,mBAAOC,EAAP,KAAeC,EAAf,KAWA,OAVAC,qBAAU,WACExB,EAAQC,GAAWwB,MAAK,SAAAd,GACAe,YAAW,WACPH,EAAU,CACNf,KAAOG,EACPU,UAAW,MAEjB,UAEvB,CAACpB,IACTqB,EDVkBK,CAAY1B,GAA9BO,EAAP,EAAOA,KAAMa,EAAb,EAAaA,SACb,OACI,qCACG,6BAAKpB,IACJoB,GAAU,4CACV,qBAAKJ,UAAU,YAAf,SAGQT,EAAKE,KAAI,SAAAC,GAAM,OAAE,cAAC,EAAD,CAELA,OAAUA,GADHA,EAAOC,aEXjCgB,EAAe,WAExB,MAAoCzC,mBAAS,CAAC,WAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAS,OAErB,aADA,CACC,EAAD,CAEIA,UAAWA,GADJA,YCb7B6B,G,MAAUC,SAASC,cAAc,UAEvCC,IAASC,OAAO,cAAC,EAAD,IAAiBJ,K","file":"static/js/main.c70936d3.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n   \r\n   const [inputValue, setInputValue] = useState('');\r\n   const handleInputChange = e =>{setInputValue(e.target.value);};\r\n   const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2)\r\n        {\r\n            setCategorias(catgs => [inputValue,...catgs]);\r\n            setInputValue('');\r\n        }\r\n        // else {alert('debe contener mas de 2 caracteres')}\r\n   }\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input \r\n                type ='text'\r\n                value = {inputValue}\r\n                onChange = {handleInputChange}\r\n            />            \r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategorias : PropTypes.func.isRequired}\r\n","\r\nexport const getGifs = async (categoria) =>{\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=4&api_key=ROCPg1RNQvpFZD0tAkPTtQJTxUeVZNIX`;\r\n    // console.log(categoria);\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n\r\n    \r\n    const gifs = data.map( imagen =>{\r\n        return{\r\n            id: imagen.id,\r\n            title: imagen.title,\r\n            url: imagen.images?.downsized_medium.url\r\n        }\r\n    });\r\n    \r\n    return gifs;\r\n} ","import React from 'react'\r\n\r\nexport const GifGridItem = ({imagen}) => {\r\n    \r\n    return (\r\n        <div className='card'>\r\n            <img src={imagen.url} alt = {imagen.title}/>             \r\n             <p>{imagen.title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetcGifs } from '../Hooks/useFetcGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({categoria}) => {\r\n    \r\n    const {data, cargando} = useFetcGifs(categoria)    \r\n    return (\r\n        <>\r\n           <h3>{categoria}</h3> \r\n           {cargando&&<p>Cargando...</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    \r\n                    data.map(imagen=><GifGridItem \r\n                                key = {imagen.id}\r\n                                imagen = {imagen}\r\n                            />)\r\n                } \r\n            </div>\r\n        </>        \r\n    )\r\n}                  \r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../Helpers/GetGifs\";\r\n\r\n \r\n export const useFetcGifs = (categoria) => {\r\n     \r\n    const [estado, setEstado] = useState({data:[],cargando:true});\r\n    useEffect(()=>{\r\n                getGifs(categoria).then(imagen =>{\r\n                                        setTimeout(()=>{\r\n                                            setEstado({\r\n                                                data : imagen,\r\n                                                cargando : false\r\n                                            })                                            \r\n                                        },3000)\r\n                                        })\r\n                 },[categoria])                \r\n    return estado;\r\n}\r\n\r\n//  useEffect(()=>{\r\n//     getGifs(categoria)\r\n//         .then(imagen => setImagenes(imagen));\r\n//         //cuando en una funcion su argumento es mandado como argumento al callback bastaria con\r\n//         //llamar al callback-----> .then(setImagenes);\r\n// },[categoria]);    \r\n\r\n ","import React, { useState } from 'react';\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = ()=>{\r\n    \r\n    const [categorias, setCategorias] = useState(['ohtani']);   \r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias ={setCategorias}/>\r\n            <hr/>        \r\n            <ol>\r\n                {\r\n                    categorias.map( categoria => \r\n                        // return <li key = {categoria}>{categoria}</li>\r\n                        <GifGrid \r\n                            key = {categoria}    \r\n                            categoria={categoria}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { GifExpertApp } from './GifExpertApp';\r\n\r\nimport './index.css'\r\n\r\nconst divRoot = document.querySelector('#root');\r\n\r\nReactDOM.render(<GifExpertApp />,divRoot);"],"sourceRoot":""}